section.part
  .hero
    .hero-inner
      a.hero-logo href=""
        img alt=("Logo Image") src="https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/placeholder_logo_1.png" /
      .hero-copy
        h1 Sweet Potato
        h2 Connecting People with Enlightenment
        p For practioners with busy lives
      button Learn More
section.part
  .cards
    .card
      .card-image
        img alt="" src="https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/mountains.png" /
      .card-header
        | Sign Up
      .card-copy
        p Connect with the community
        = link_to "Sign up", sign_up_path, class: 'button'
    .card
      .card-image
        img alt="" src="https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/mountains-4.png" /
      .card-header
        | Engage
      .card-copy
        p Engage in a class
        = link_to "Find a Retreat", events_index_path, class: 'button'
    .card
      .card-image
        img alt="" src="https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/mountains-3.png" /
      .card-header
        | Share
      .card-copy
        p Share a class or retreat
        = link_to "Organize", event_new_path, class: 'button'
section.part
  #map_canvas

- if @hash_events.present?
  == content_for :javascript
    javascript:
      if (typeof google === 'object' && typeof google.maps === 'object') {

        var markers = [];
        var overlay = "";

        var handler = Gmaps.build('Google',
          { markers:
            { maxRandomDistance: null }
        });

        handler.buildMap({
            provider: {
              minZoom: 4,
              maxZoom: 16,
              draggable: true,
              zoomControl: true,
              scrollwheel: false,
              disableDoubleClickZoom: true,
              disableDefaultUI: true,
              mapTypeId: google.maps.MapTypeId.ROADMAP,
              styles: Maps.styles,
              zoomControlOptions: {
                style: google.maps.ZoomControlStyle.SMALL
              }
            },
            internal: {
              id: 'map_canvas'
            }
          },
          function(){
            markers = handler.addMarkers(#{raw @hash_events.to_json}, { optimized: false });
            handler.bounds.extendWith(markers);
            handler.fitMapToBounds();
            createOverlay();
            propertyToggle();
            mapResize();

            google.maps.event.addListener(handler.map.getServiceObject(), 'click', _closeInfoWindow);
            google.maps.event.addListener(handler.map.getServiceObject(), 'drag', _closeInfoWindow);
          }
        );

        function _closeInfoWindow(){
          if(handler.currentInfowindow()) {
            handler.currentInfowindow().close();
          }
        };

      } else {
        $("#map_canvas").text('Map Temporarily Unavailable');
      }
