section.part
  .hero
    .hero-inner
      a.hero-logo href=""
        img alt=("Logo Image") src="https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/placeholder_logo_1.png" /
      .hero-copy
        h1 Sweet Potato
        h2 Connect, Engage, Reflect
        h3
          | Get the most out of your retreats.
        h1 Short description of Product
        p A few reasons why this product is worth using, who it's for and why they need it.
      button Learn More
section.part
  .cards
    .card
      .card-image
        img alt="" src="https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/mountains.png" /
      .card-header
        | Connect
      .card-copy
        p Connect with the community
        = link_to "Sign up", '#', class: 'button'
    .card
      .card-image
        img alt="" src="https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/mountains-4.png" /
      .card-header
        | Engage
      .card-copy
        p Engage in retreats
        = link_to "Find a Retreat", "#", class: 'button'
    .card
      .card-image
        img alt="" src="https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/mountains-3.png" /
      .card-header
        | Organize
      .card-copy
        p Organize a retreat
        = link_to "Organize", '#', class: 'button'
section.part
  #map_canvas

== content_for :javascript
  javascript:
    if (typeof google === 'object' && typeof google.maps === 'object') {

      var markers = [];
      var overlay = "";

      var handler = Gmaps.build('Google',
        { markers:
          { maxRandomDistance: null }
      });

      handler.buildMap({
          provider: {
            minZoom: 4,
            maxZoom: 16,
            draggable: true,
            zoomControl: true,
            scrollwheel: false,
            disableDoubleClickZoom: true,
            disableDefaultUI: true,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            styles: Maps.styles,
            zoomControlOptions: {
              style: google.maps.ZoomControlStyle.SMALL
            }
          },
          internal: {
            id: 'map_canvas'
          }
        },
        function(){
          markers = handler.addMarkers(#{raw @hash_events.to_json}, { optimized: false });
          handler.bounds.extendWith(markers);
          handler.fitMapToBounds();
          createOverlay();
          propertyToggle();
          mapResize();

          google.maps.event.addListener(handler.map.getServiceObject(), 'click', _closeInfoWindow);
          google.maps.event.addListener(handler.map.getServiceObject(), 'drag', _closeInfoWindow);
        }
      );

      function _closeInfoWindow(){
        if(handler.currentInfowindow()) {
          handler.currentInfowindow().close();
        }
      };

    } else {
      $("#map_canvas").text('Map Temporarily Unavailable');
    }
